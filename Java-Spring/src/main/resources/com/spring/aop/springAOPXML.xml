<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--目标对象-->
    <bean id="userManager" class="com.spring.aop.module.UserManagerImpl"/>
    <!-- 注册通知 -->
    <bean class="com.spring.aop.module.XMLAdvice" name="xmlAdvice"/>
    <aop:config>
        <!-- 设置切点 -->
        <aop:pointcut id="beforePoint" expression="execution(* com.spring.aop.module.UserManagerImpl.before(..))"/>
        <aop:pointcut id="aroundPoint" expression="execution(* com.spring.aop.module.UserManagerImpl.around(..))"/>
        <aop:pointcut id="afterPoint" expression="execution(* com.spring.aop.module.UserManagerImpl.after(..))"/>
        <aop:pointcut id="afterReturningPoint" expression="execution(* com.spring.aop.module.UserManagerImpl.afterReturning(..))"/>
        <aop:pointcut id="afterThrowingPoint" expression="execution(* com.spring.aop.module.UserManagerImpl.afterThrowing(..))"/>

        <!-- 切面 -->
        <aop:aspect ref="xmlAdvice">
            <!-- 织入 -->
            <aop:before method="doBefore"  pointcut-ref="beforePoint"/> <!-- 前置通知：目标方法运行之前调用 -->

            <aop:around method="doAround"  pointcut-ref="aroundPoint"/> <!-- 环绕通知：在目标方法之前和之后都调用 -->

            <aop:after method="doAfter"  pointcut-ref="afterPoint"/> <!-- 后置通知(无论是否出现 异常都会调用)：在目标方法运行之后调用-->

            <aop:after-returning method="doReturn"  pointcut-ref="afterReturningPoint"/><!-- 后置通知(如果出现异常不会调用)：在目标方法运行之后调用 -->

            <aop:after-throwing method="doThrowing" throwing="ex" pointcut-ref="afterThrowingPoint"/> <!-- 异常拦截通知(不完全等于try-catch)：如果出现异常,就会调用 -->
        </aop:aspect>

    </aop:config>


</beans>