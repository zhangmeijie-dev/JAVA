多态：  
      父类引用变量可以指向子类对象

★★★★★★★★ 多态性分为：
		编译期的多态 （前绑定） 
			 ---> 在编译的时候就已经确定了提供了哪个具体服务，也就是提供的服务对于使用者是透明的
			 例如：方法的重载

		运行期的多态  （后绑定）
			 --->       在编译时，只知道提供了某种服务，只有在运行时才知道实际提供了具体的服务。   也就是说提供的服务对于使用者不是透明的。
			例如：方法的重写

 ★ 前提：
      1： 必须有子类关系或者类实现接口关系
      2：使用多态变量皇后的父类引用变量调用方法时，实际上调用的时子类的方法（ 编译时看的是父类，运行时看的是子类 ）

 ★多态的定义格式：
         父类类型或接口类型      变量名  = new 子类类型或接口的实现类类型（）


★★多态的调用：
      成员方法的调用：
                   编译看左边，运行看右边
      成员变量的调用:
                   编译运行都看左边。
注意：
	如果完成向上转型，那么在调用方法的时候，返回值的类型是父类中方法的类型。


★★★★ intstanceof    ------>  运算符
                   用于比较一个对象是否是为一个指定的类型
        使用格式：
                对象名  instanceof   数据类型（引用类型的数据类型）

★★多态的转型：
                向上转型:   ---------->  父类或接口   变量名  = new 子类或实现类（）；
                                                  将子类或者实现类  提升为父类或接口类型
                     特点：
                                 不能访问子类特有的方法，只能调用他们2都有的方法
                
                向下转型： --------->   子类或实现类  变量名  = （子类或实现类类型）对象
                                               将向上转型后的对象，变为子类或实现类的类型
                            特点：
                                       转型后可以访问子类特有的方法，但是不能调用父类的方法；

