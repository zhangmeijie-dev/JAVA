Map<K ,V>接口             java.util.Map；
                                                                                                               
	也是一种集合，存储的是键值对

		★★★★  键的值不能重复，值可以重复  ★★★★

		★★★★   一个键只能对应一个值   ★★★★

	注：
	      Map接口中有一个内部接口Entry<K ,V>, 该接口是用来描述Map集合的键值对关系对象


★★★★ 常用的实现类有：★★★★ 

	★★★★  HashMap（ K , V ）------------线程不安全
		基于哈希表的Map集合   无序存储  不能存储重复 键（ K ）的数据，存储重复键的数据则会用后存储相同键的值覆盖掉之前重复键的值
		允许存储null值 null键
			K:这个是键---他是存储的依据，他不允许重复
			V:这个是值--------他无所谓，可以重复
	
	★★ LinkeHashMap（ K ，V）（继承自HashMap）----------线程不安全
		他和HashMap唯一的不同就在于他保证了取出来的顺序和存入的顺序相同


	★  HashTable（ K，V ）-----------线程安全
		不允许存储null值 null键  	（ 被淘汰了 但是有他的子类Properties还没有淘汰 ）
			



★★★★方法：（抽象方法）
	
	★★★ V	put（k,v）-------------------向调用者存储值（K,V），并返回 值 (V)
		注：
		返回值一般是NULL(没有出现重复情况的键值对) 如果要存储数据的键在列表中没有，则将值存入进去并返回NULL   如果要存储数据的键在列表中有，则将值把列表中相同键的值给覆盖掉并返回 原来的键对应的值
	
	★★★ void	  putAll（Map<? extends K,? extends V> ）------------------从指定映射中将所有映射关系复制到调用者中 

	★★★ V	get(K)--------------------取出调用者 键 （K） 为之对应的值（V）
		
		注：
		   如果有这个键的时候会返回对应的值，如果没有则返回NULL

	★★★ boolean	containsKey（Object ）  -----------如果如果调用者中含指定键（Object）则返回 true，反之则返回flase。
				Object----指定的键 K    
			
	★★★ boolean	containsValue（Object ）------------如果调用者中含有一个或多个值与指定对象（ Object ）一样则返回 true，反之则返回flase 
				Object ----指定的值 V

	★★★ void	  clear()-----------------移除调用者中的所有键值对的映射关系 

	★★★ V	remove(K)--------------------------移除调用者中键的值为K的键值对并返回值 被移除键值对的值  如果没有这个键那么则返回 Null
		返回值：
			被移除键值对的值  如果没有这个键那么则返回 Null

	★★★ int	size（）-----------------------------返回调用者的长度

	★★★ Collection<V>	  values() --------------返回调用者中包含的值的 Collection 集合。
		返回值：
			返回的是一个装有调用者中全部值的Collection集合

	★★★ Set< K >    keySet()------------------------把调用者中的所有键全部复制到一个Set集合中
		返回值：
			返回的是一个装有调用者中全部键的hashMap集合
			

	★★★ Set< Map.Entry< K,V > >	entrySet()--------------- 把调用者的键值对关系复制到一个Set集合中
		返回值：
			一个存有调用者中全部键值对映射关系的Set集合
	
	补充：				
		★★★Map.Entry<K,V>★★★   （他是Map接口中的一个内部接口）
						
			K  getKey()-------------返回调用者的 K 对应的值
						
			V  getValue()-----------返回调用者的 V 对应的值
					
			V  setValue(V value)------用传过来的值修改调用者中的 V 的值,并返回被修改掉的值


★★★★Map集合的遍历★★★★
		Map集合不可以直接遍历需要先调用keySet()方法在遍历Set集合从而来遍历Map集合或者是通过entrySet()方法获取到存储该Map集合的所有键值对映射关系的集合，然后通过遍历键值对映射关系列表来达到遍历Map集合的效果

		方法一：（通过键值对对象来遍历：Entry < K ,V > -----是Map <K,V> 接口中的一个内部接口，用来存储键值对关系的一个接口）
			1：先调用方法 entrySet() 取出Map集合中所有的键值对关系并存入到一个Set集合中并返回该Set 集合
			2：应为为Set集合可以遍历，所以直接遍历返回的Set集合取出键值对关系对象
			3：在用取出来的键值对对象调用自己的方法
	
		方法二：	（ 通过先获取到Map集合的所有键的集合对象， 然后通过遍历该集合取到所有键，再来取到Map中与之对应的值 ）	
			1：先调用Map集合的keySet()方法，获取到存储Map所有键的Set集合
			2：然后通过遍历Set集合，取到Map的所有键  
			3：我们可以Map的方法通过键取到与对应的值


