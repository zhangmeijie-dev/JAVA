注解：		Annotation接口
	用来给JVM看的
注解的定义格式：
	
	源注解
	权限修饰符    @interface   注解名{
		
		类型   变量名()   defaulte  值;
		。
		。
		。（注解的属性。只有属性没有方法）
	}


	注意：
		类型---------------->1：基本类型（byte，short，int ，・・・・・）
				2：String
				3: 枚举
				4：Class
				5：注解
				6：以上类型的一维数组
		
		变量名 -------------->1：如果属性名为value时，在使用该注解时可以直接赋值，不用写变量名=值
				2：如果该变量没有默认值，那么在使用的时候就必须要给出值


源注解：
	用来修饰注解的
@Target（ 值 ）------------------------修饰注解的的表示范围
		值：（Json串格式）
			{
			  ”FIELD“  ，			-------->成员变量（字段）上
			  ”METHOD“  ，			-------->成员方法上
			  ”TYPE“  ，			-------->接口 | 枚举 | 类  上可用
			  ”PARAMETER“  ，		-------->参数列表上
			  ”LOCAL_VARIABLE“  ，		-------->局部变量上可用
			  ”CONSTRUCTOR“  ，		-------->构造方法上可用
				。
				。
				。
			}

	注意：
		1：该值可以有多个
		2：默认值为All。表示该注解的可用范围没任意地方
		3：该值在 ElementType枚举中列有


@Retention( 值 )  ----------------------------------设置该源注解修饰的注解的可见级别
	值：					          .java 文件	       .class 文件	     进入虚拟机中
		SOURCE  -----------------------> 源码级别		√
	   （默认）CLASS--------------------------->编译级别 		√		√
		RUNTIME----------------------->运行级别    	√		√		√

	注意：
		1：该值只能由一个，不能有多个
		2：该值 RetentionPolicy枚举提供的有


