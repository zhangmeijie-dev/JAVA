★★ 成员内部类：
    1：写在成员位子上的类
    2：可以使用成员修饰符
    3：内部类也是一个类，也可以继承类和实现接口  。但是该类在编译后生成的Class文件为： 外部类类名$内部类类名 .class
    4：内部类可以直接调用外部类的成员方法和变量。（包括私有的）
    5：静态的成员内部类中可以有静态的方法或静态的变量，
         而非静态的成员内部类中不可以有静态的方法或变量（该种情况下该变量如果是static final  类型 变量名 =值 ；则可以）。
    6：外部类要想使用内部类的成员，不可以直接调用，只能通过建立内部类对象，通过内部类对象来调用
	
	在第三方类中建立内部类对象方式：
		 --（内部类为非静态时）----外部类 . 内部类   变量名 = new 外部类 ( ) . new 内部类 ( )；
		 --（内部类为静态时）------外部类 . 内部类   变量名 = new 外部类 . 内部类 ( )；

	在外部类中建立成员内部类对象方式：
		--（内部类为非静态时）----外部类 . 内部类   变量名 = new 外部类 ( ) . new 内部类 ( )；
		--（内部类为静态时）------外部类 . 内部类   变量名 = new 外部类 . 内部类 ( )；

外部类调用内部类：
★★ 外部类中调用成员内部类的调用规则：
       1：如果在外部类中的静态方法中调用成员内部类的成员方法或变量，那么该成员内部类必须为static 的否则外部类的静态方法无法访问。
		--------在外部类的静态方法中直接：new  内部类 ( ) . 成员方法或成员变量

      2：  如果在外部类的非静态方法中调用成员内部类的成员变量或方法，那么成员内部类可以为静态也可以不为静态。
          		--------在外部类的非静态方法中使用：new 内部类 ( ) . 成员方法或变量

★★ 在其他类（非外部类）中调用内部类：
       不管调用内部类的方法是否为静态的 调用步骤如下：
	1：先获取内部类对象
                         内部类为非静态时------  外部类类名 . 内部类类名    变量名   =  new  外部类（）.  new 内部类 （）；
	         内部类为静态时-------- 外部类 . 内部类   变量名 = new 外部类 . 内部类（）；
	2：通过创建的内部类变量来调用内部类的成员名
                          变量名. 内部类成员名；


内部类调用外部类：
★★ 成员内部类中调用外部类的成员变量和成员方法：（内部类中没有与外部类中的方法或变量重名）
	1： 静态的成员内部类中（不管调用的外部类的方法是否为静态，只要内部类为静态即可）可以直接使用外部类中静态修饰的变量或方法（private修饰的也可以访问），但是不可以直接访问外部类中的非静态成员，需要通过创建外部类对象来调用外部类的非静态成员方法。

	2： 非静态的成员内部类中，可以随意的调用外部类中的静态变量或非静态变量（private修饰的也可以访问）



★★ 成员内部类中调用外部类的成员变量和成员方法：（内部类中与外部类中的方法或变量重名的调用）
	1： 静态的成员内部类中调用外部类中的非静态方法:   
		方法一：------------先创建外部类对象，然后通过外部类的对象来调用重名的外部类的方法或变量。
			new 外部类类名( ) . 重名的方法或变量

	2： 静态成员内部类中调用外部类中的静态方法： ----（不管调用的方法是否为静态操作都一样）
		方法一：------------直接通过   外部类名 .重名的方法或变量名  的方式来调用重名的外部类中的方法或变量

		方法二：------------先创建外部类对象，在通过外部类对象来调用重名的方法或变量

	3： 非静态的成员内部类中调用外部类中的非静态方法：
		方法一：------------先创建外部类对象，再通过外部类对象来调用重名的方法或变量

		方法二：------------外部类 . this . 同名的变量或方法

	4： 非静态的成员内部类中调用外部类中的静态方法：
		方法一：------------外部类名 . 重名变量或方法名

		方法二：------------外部类名 . this . 同名的变量或方法 

		方法三：------（建议不使用）------先创建外部类对象，在通过外部类对象来调用重名变量或方法

	