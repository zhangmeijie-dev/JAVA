Lambda表达式：---JDK8
	可推导及可省略
注意：
	1：使用对象是只有一个抽象方法要被重写的接口。
	2：可作为 参数 或 返回值使用 
	3：必须要有上下文

标准格式：
	（参数列表）->  {  方法体   }

特殊格式一：
	如果参数列表只有一个参数时：
	变量名   ->  {  方法体  }
特殊格式二：
	如果方法体中只有一句语句时
	（ 参数列表 ） ->  语句 

特殊格式三：
	如果该方法体中的逻辑可以被已有的方法代替

	（参数列表） ->   对象名  ::  方法名	 --------------引用某个对象对象的非静态方法

	（参数列表） ->   类名  ::  方法名	--------------引用某个类中的静态方法

	（参数列表） ->  super  ::  方法名   	------------------引用语句所在类的父类中的方法
	（参数列表） ->  super . 方法名( )   	------------------等同与上一个

	（参数列表） ->   this  ::  方法名                --------------------引用语句所在类中的方法
	（参数列表） ->  this . 方法名( )    	---------------------等同与上一个

	（参数列表） ->   类名  ::  new 		------------------引用指定类的构造器   

	



函数式接口：（常用）   java. util.function
	
	Supplier< T >接口：   -----(生产者)

		T	get();-------------抽象方法

	Consumer< T >接口：------（消费者）

		void	accept（ T ）-------抽象方法

		Consumer<T>	andThen（ Consumer ）

	Predicate< T >接口：-------（断言）

		void	test（ T ）；----------抽象方法

		Predicate		and（ Predicate）；
	
		Predicate		or（ Predicate ）：

		Predicate		negate（）；


	Function< T, R >接口：--------------(函数，功能)

		R	apply（ T ）；-------------抽象方法

		Function		andThen（ Function ）


	IntFunction< R >接口：
		
		R	apply（ int ）：


